# cpus_per_worker setup examples
# ! on Archer 2
# ! 1. using 8 nodes (= 8*128 = 1024 cores) 1024 / 32 = 32 workgroups
# ! 2. using 2 nodes (= 2*128 = 256  cores) 256  / 32 = 8  workgroups
#
# task_start / task_end setup example
# ! for instance if you want to run A$m.gin - A$n.gin
# ! task_start m
# ! task_end   n
#
#####################################################
# Task Configuration
#####################################################
task_start	0
task_end	19517
#####################################################
# Workgroup Configuration
#####################################################
cpus_per_worker  4 # using 32 cpu cores per workgroup

#####################################################
# ---------------------------------------------------
# APPLICATIONS
# ---------------------------------------------------
# * GULP
# gulp                             : read prepared GULP input files from disk 07/23 wkjee full feature
# gulp-rq                          : Random-Quenching
# gulp-ss                          : Solid-Solution
# gulp-bh                          : Basin-Holing
# gulp-sa                          : Simulated-Annealing
# gulp-mm                          : Metropolis-MonteCarlo
# gulp-lm                          : Lid-MonteCarlo
# gulp-sc                          : Surface-Cluster Translation
# gulp-ga                          : Genetic-Algorithm
# ---------------------------------------------------
# * Python : single core workgroup only
# python                           : single-core worker python
#####################################################
application gulp
#application gulp-rq
#application gulp-ss
#application gulp-bh
#application gulp-sa
#application gulp-mm
#application gulp-lm
#application gulp-sc
#application gulp-ga
#####################################################
# TEMPLATE
#####################################################
geometry_template _file_path
gulp_keywords     _file_path
gulp_options      _file_path











